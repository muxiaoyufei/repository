闭包的理解:
1.什么是闭包？
函数的嵌套可以理解为闭包，也就是说在函数内部定义的函数。使其可以访问其他函数内部的变量。
2.闭包的作用？
1）闭包可以使函数外部能够访问函数内部的成员，也可以修改变量的值
2）让这些变量始终保存在内存中，不会玩在函数调用后自动清除
3）以及某些不希望暴露出来的变量
3.如何读取函数内部的变量
例:function fn1(){
    var n=0；
    return function(){
      return n++;
    }
}
var fun = fn1();  这里调用的是外层函数
var fun1= fun();  fun1访问的是内层函数
console.log(fun1);  这里可以获取到内层函数的值
而且这里面的值不会在函数执行完后自动清除
这里多执行两边fun()这个函数，内层函数的值为累加状态，证明外层函数的值是不会消失
4.闭包的缺点？
闭包作用域内所有的变量都会存于内存中，因此很消耗内存。
5.在何处使用闭包？
比如在点击ul中每项li标签的值，想过去对应的文本，用for循环时。
例:
for(var i=0;i<5;i++){
  li[i].onclick = (
    return function(n){
      var text=li[n].innerHTML;
      retutn text
    }
)(i)
}
console.log(text);
因为for循环会形成5次闭包，每个闭包内部的变量都是单独的，所以每次点击不同的li标签，只会打印对应的文本。
